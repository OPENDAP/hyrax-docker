# paste config here

# Initial Travic-CI control file. 6.11.15 jhrg
# Added sonar scan 3.12.19 jhrg 

dist: xenial

language: python

services:
  - docker

branches:
  only:
  - master
  - main
  - /^(.*-test-deploy)$/

notifications:
  email:
    - ndp@opendap.org
    - jgallagher@opendap.org

addons:
  apt:
    packages:
      - gnupg
      - jq

env:
  global:
    # AWS_ACCESS_KEY_ID for the user 'travis-hyrax-docker'
    - secure: "rcgtvltN9UEQHYmuTgkspQaveTjYLQW64u7w2NWYJL7QryqiuItxTtCAOCPael+DYWXloUOK++rfBwzsmJDnCrLGK9io3aBGZgdY5qmmYOgFJ35l3SM1APHXAjQyT6XHWotsIdHQd0FZYSlBrsIAM3qXnHPx1GLmSg6L6V6bQujkfIqq9WwR9cleinj50EQ6gHgJ2ObPjLxGALERhQiV5Ebe4jbaqifkiz7/ytzvGP4HpXS/Gh+9zVqPxM1Vxt8a2naDCBhF+/LFpKTx6n0Kf8O5rjq5r6vIDfxyjClRCOpeeq6T2n2iQeWvYByCjDtow4VGO/13iRrlTH4kepWNObM5pB2CfV1rLoopLAQo9waOnSAbWHJjGg2KS6XPdiG/k0kBIAHCgrD2LzP9jVajO3syeyapK450ZYBjhf4MJU2w+h3T4wuBsH6qhWVFc59MXdeXRLCdwDlgyium5zJeFxvtFKtVu+OmKj+dhsLGpKHeuP1N97Lh+aB9q7jQNhYoSxwHgJg4zy0rSpFX6gTCSkzA5Gds3B/82ZjjRbOMO4KzE9HzfQA5fwkW4M7WQe6QpLHBTSTiswXRn4b6lIcZTf9InFN9ulAsA3cLAd6wGJ3fIwnfItUdz9cMnPtxJfXhvNvAYj5e9gUf3ok3F2WdSeETEFJKTjZr6/+TCdIuSRU="
    # AWS_SECRET_ACCESS_KEY
    - secure: "d9qdpIXuAr2NGnmSQ20yLMSrxY4sIp3DsJO+c/LmjuNXLtBeLTZVNdUXPy0M8vmX2jpKGnzzvfqj7Hrzq5n5+6Sd+/RQKInXJFmJRbxVKj1f3sHInX+WoIDeEXluOFpwVCKoNBNLzmKaGwIM5DqpSLAApp8RkHyCPsai8yCCI1uBFuxDA0ff+ZI6jmhLQPlm4+MdHxdnJVAe6ccxNPGlteTJBEyVm5vrnC5NZf5kgMmfgWUU5OP7qPXKq6Vwu3HlAzS/4vf48I/BAOf+Y/sQEuwGICNi1iW63cBKjinltDX6TrAXCfiModF06nu5mxsNS+IHOykPINk7eH0vD/mqXaAhgAkq2CUb3O0LLPziWFH0c/GDFWk+MTZJ8hIJHGy91DPCVAwwkOJKlxBYG3OkJmG3y8l1jhxxsZHfybO9IXiLTDx42WjtwIXa5+fpb16ydWkcltW4jnNB8LjqnVgS4oZf90T0hAc0xmKjHMiVFVVQmbkgfs1sKvFH0hL/B5P14BxtI28oGU7f6Zv5gYTexuD8C6x5ddOqlEK/lwDYw+k1o32ilfYZ0C+3K/uTLhzKsaB6+j3Q3RTLHUljL9vQtFnmfMZriIEScG46PQfnhzSnD1iyIbCHSyCf+l6O1y2JK9QVjHfMoJaLrMcnncoRVmurrwQM5TKjDTiuLDSsFv8="
    # DOCKER_HUB_UID for our DockerHub account
    - secure: "SpCKRpuU9nIHayBZCQVoUIEK/2niy1Lw0fub/O/mAvzq33/VQa1K4WZcAJjl95KS/mrFjj3e5Gp35jXRNeViB8D3DKE9oZ3R5WDk1V66qDpmxYCSW/6iR2Zm6rjBB4wV6wWPZ1WYBg3Hg6oVZD1X8c5ABqJk7PE59L1IRF8Ocf3p8K0EUYDGINakXZ/RJHe6HtA4++oMhq54dPUTAa6xUrkCw3KNC1UXkoofzS3r/KBAZ+MPtzZkR8/dK8qPQ8hiOuH4Blj4T+d4oHPzcbmz5Nze10wZAhAm6+KwLLBSCs7Morverb1acdKPyye/t1dhzhT3/wiaP75vxDF/STdBYH6GX9HuV9JWXC8bJZxrkZcxyuVsreq/ClpLOhOk0Yfd6pTEa/QZZ+U6hyxcNbu6rROAAZpgsjPAiH3vVC9OdFo11p7bZMpBGyqUeiS82XlZ/3Svj//tiUFji2xwua1SHiM3wmgrLjII2iw8eSYuCEjqtoV6jPT0LfKzLSzuCt1S77SzaujkwBiQ1mSIJuE9SNvpXyJEQ4BInVFn+jOxCxQf6sT7ZnW7mxfK1MmgSKpzoBp8WlIAQAIewTJeaU59ws1nYbha84b80vEXp839Eesfpsf5C44dlnFSCa7sZFJ2tRjPaHv7Swt0dyJ2AmL0EHCfecX3e5sSKQAtxLN9+1E="
    # DOCKER_HUB_PSWD for our DockerHub account
    - secure: "TwtIaxZhEc+THFGe7qcOTmgeXG37tG9Hqmx0/JQS4UBYmbM+n/RbxV0IK5WjTBsvV/UBPVPdYLb0EOgsZDWjrFR7kyemd1dLc4fgb7EnHEyl17GUK3CR+ZtnRNAn+u10CJ3lq1d+ttda0GrEOpGT9e2nqPo19BxQ4vlhuFq8TAb4lKfBz3y89sY0Py+3htDtqNrIcZ1Ca0cyKmkU90/42Hx5kmBJPcFAIIrxy46cF4iNyQ8cS5TAmY/vQ+ZcoiO5yCA6ACqKWqFH2i7qUZhVsBWI6VWgQTbuRKOJ4RdOv2QtHb3QGO+PdxxitpQvw2aYam4nI7WapqNk84hu+oXoavDSR0kN21vlpfvcyfIi9JuEGGmVb7irbCCVo27kLHrRrntByKJ7GpR5Wf9s8frWd53iri9k0DSwxvKGZBIaFPodnYsJKF1Ck16IrJrr6AgPZvTKN4vBesFiRvI6sIJrZL6gD62cW2s196zKaSzcT0DccUKCaG6/javNazMo+sk74tOgqaeX0r/whXv8Rc/oobdUFI0AkGGOTzp4+QHVKX1swPEVEjP00ewOyurQinG1yhkqOgQU7s6f5dXabepmnFtH5j5W8AjDL6kISk1w/UIfMwGkUDXyxSGZWLaLag2oDxb+0Xe4CC+9m6SxtnRSzUjXDzOL4QBB8ri0VBSMA2E="
    - RELEASE_DATE=`date +%s`
    - VERSION_FILE=snapshot.time
    - LIBDAP_VERSION=$(grep "libdap4-" ${VERSION_FILE} | awk '{print $1;}' - | sed "s/libdap4-//g")
    - BES_VERSION=$(grep "bes-" ${VERSION_FILE} | awk '{print $1;}' - | sed "s/bes-//g")
    - HYRAX_VERSION=$(grep "hyrax-" ${VERSION_FILE} | awk '{print $1;}' - | sed "s/hyrax-//g")
    - OLFS_VERSION=$(grep "olfs-" ${VERSION_FILE} | awk '{print $1;}' - | sed "s/olfs-//g")
    - OLFS_DISTRO="olfs-${OLFS_VERSION}-webapp.tgz"
    - OLFS_DISTRO_URL="s3://opendap.travis.build/${OLFS_DISTRO}"
    - NGAP_DISTRO="ngap-${OLFS_VERSION}-webapp.tgz"
    - NGAP_DISTRO_URL="s3://opendap.travis.build/${NGAP_DISTRO}"
    - ROBOTS_DISTRO="robots-olfs-${OLFS_VERSION}-webapp.tgz"
    - ROBOTS_DISTRO_URL="s3://opendap.travis.build/${ROBOTS_DISTRO}"
    - LIBDAP_RH8_RPM="libdap-${LIBDAP_VERSION}.el8.x86_64.rpm"
    - LIBDAP_RH8_RPM_URL="s3://opendap.travis.build/${LIBDAP_RH8_RPM}"
    - BES_RH8_RPM="bes-${BES_VERSION}.static.el8.x86_64.rpm"
    - BES_RH8_RPM_URL="s3://opendap.travis.build/${BES_RH8_RPM}"
    - TOMCAT_MAJOR_VERSION=9
    - S3_BUILD_BUCKET="opendap.travis.build"
    - ADD_DEBUG_RPMS=""

before_install:
  - pip3 install awscli
  - if test "$TRAVIS_PULL_REQUEST" = "false" || [[ "$TRAVIS_PULL_REQUEST_BRANCH" =~ ^(.*-test-deploy)$ ]]; then export DEPLOY_ME="true"; else export DEPLOY_ME="false"; fi
  - echo "TRAVIS_PULL_REQUEST is $TRAVIS_PULL_REQUEST, DEPLOY_ME is ${DEPLOY_ME}, TRAVIS_PULL_REQUEST_BRANCH is $TRAVIS_PULL_REQUEST_BRANCH"

install:
  - echo "print env:"
  - printenv
  - echo $DOCKER_HUB_PSWD | docker login -u $DOCKER_HUB_UID --password-stdin
  # - echo "Retrieving libdap C7 RPM ${LIBDAP_C7_RPM}"
  # - aws --region=us-east-1 s3 cp ${LIBDAP_C7_RPM_URL} ./hyrax-builds/${LIBDAP_C7_RPM}
  # - echo "Retrieving BES C7 RPM ${BES_C7_RPM}"
  # - aws --region=us-east-1 s3 cp ${BES_C7_RPM_URL} ./hyrax-builds/${BES_C7_RPM}
  - echo "Retrieving libdap RH8 RPM ${LIBDAP_RH8_RPM}"
  - aws --region=us-east-1 s3 cp ${LIBDAP_RH8_RPM_URL} ./hyrax-builds/${LIBDAP_RH8_RPM}
  - echo "Retrieving BES RH8 RPM ${BES_RH8_RPM}"
  - aws --region=us-east-1 s3 cp ${BES_RH8_RPM_URL} ./hyrax-builds/${BES_RH8_RPM}
  - echo "Retrieving OLFS Distribution file ${OLFS_DISTRO}"
  - aws --region=us-east-1 s3 cp ${OLFS_DISTRO_URL} ./hyrax-builds/${OLFS_DISTRO}
  - echo "Retrieving ROBOTS Distribution file ${ROBOTS_DISTRO}"
  - aws --region=us-east-1 s3 cp ${ROBOTS_DISTRO_URL} ./hyrax-builds/${ROBOTS_DISTRO}
  - echo "Retrieving NGAP Distribution file ${NGAP_DISTRO}"
  - aws --region=us-east-1 s3 cp ${NGAP_DISTRO_URL} ./hyrax-builds/${NGAP_DISTRO}
  - ls -l ./hyrax-builds

stages:
  - name: OLFS
    if: branch = master
  - name: BUILD_AND_TEST
    if:  branch = master
  - name: BUILD
    if:  branch = master
  - name: TEST_DEPLOYED_IMAGE
    if: branch = master
  - name: disabled
    if: branch = disabled

jobs:
  include:

    ############################################################################
    #
    # RH8 Builds
    #
    - stage: BUILD_AND_TEST
      name: "Build and Test opendap/hyrax:snapshot (RH8)"
      script:
        - cd hyrax-builds
        - export DOCKER_NAME="hyrax"
        - source ./build-rh8
        - export SNAPSHOT_IMAGE_TAG="opendap/${DOCKER_NAME}:snapshot"
        - export BUILD_VERSION_TAG="opendap/${DOCKER_NAME}:${HYRAX_VERSION}"
        - export TOMCAT_VERSION=$(get_latest_tomcat_version_number "${TOMCAT_MAJOR_VERSION}")
        - show_version
        - get_tomcat_distro "${DOCKER_NAME}" "${TOMCAT_VERSION}"
        - s3_get_besd_distro
          "${S3_BUILD_BUCKET}"
          "${DOCKER_NAME}"
          "el8"
          "${LIBDAP_VERSION}"
          "${BES_VERSION}" $ADD_DEBUG 2>&1
        - s3_get_olfs_distro
          "${S3_BUILD_BUCKET}"
          "${DOCKER_NAME}"
          "${OLFS_VERSION}" 2>&1
        - docker build
          --build-arg TOMCAT_VERSION
          --build-arg RELEASE_DATE
          --build-arg HYRAX_VERSION
          --build-arg LIBDAP_VERSION
          --build-arg BES_VERSION
          --build-arg OLFS_VERSION
          --tag "${SNAPSHOT_IMAGE_TAG}"
          --tag "${BUILD_VERSION_TAG}"
          "${DOCKER_NAME}"
        - docker image ls -a
        - cd ..
        - echo "Running Test Script"
        - ./regression_test_script -i ${SNAPSHOT_IMAGE_TAG}

    - stage: BUILD
      name: "Build the opendap/build_dmrpp:snapshot (RH8)"
      script:
        - cd hyrax-builds
        - export DOCKER_NAME="build_dmrpp"
        - source ./build-rh8
        - export SNAPSHOT_IMAGE_TAG="opendap/${DOCKER_NAME}:snapshot"
        - export BUILD_VERSION_TAG="opendap/${DOCKER_NAME}:${BUILD_DMRPP_VERSION}"
        - export TOMCAT_VERSION=$(get_latest_tomcat_version_number "${TOMCAT_MAJOR_VERSION}")
        - show_version
        - get_tomcat_distro "${DOCKER_NAME}" "${TOMCAT_VERSION}"
        - s3_get_besd_distro
          "${S3_BUILD_BUCKET}"
          "${DOCKER_NAME}"
          "el8"
          "${LIBDAP_VERSION}"
          "${BES_VERSION}" $ADD_DEBUG 2>&1
        - s3_get_build_dmrpp_distro
          "${S3_BUILD_BUCKET}"
          "${DOCKER_NAME}"
          "${BUILD_DMRPP_VERSION}" 2>&1
        - build_dmrpp_service_docker "${DOCKER_NAME}" ROOT
        - docker image ls -a
#        - cd ..
#        - echo "Running Test Script"
#        - ./regression_test_script -i ${SNAPSHOT_IMAGE_TAG}


    - stage: BUILD
      name: "Build opendap/besd:snapshot (RH8)"
      script:
        - cd hyrax-builds
        - export DOCKER_NAME="besd"
        - source ./build-rh8
        - export SNAPSHOT_IMAGE_TAG="opendap/${DOCKER_NAME}:snapshot"
        - export BUILD_VERSION_TAG="opendap/${DOCKER_NAME}:${BES_VERSION}"
        - show_version
        - s3_get_besd_distro
          "${S3_BUILD_BUCKET}"
          "${DOCKER_NAME}"
          "el8"
          "${LIBDAP_VERSION}"
          "${BES_VERSION}" "${ADD_DEBUG_RPMS}" 2>&1
        - docker build
          --build-arg RELEASE_DATE
          --build-arg HYRAX_VERSION
          --build-arg LIBDAP_VERSION
          --build-arg BES_VERSION
          --tag "${SNAPSHOT_IMAGE_TAG}"
          --tag "${BUILD_VERSION_TAG}"
          "${DOCKER_NAME}"
        - docker image ls -a

    - stage: BUILD
      name: "Build opendap/hyrax_ncwms:snapshot (RH8)"
      script:
        - cd hyrax-builds
        - export DOCKER_NAME="hyrax"
        - source ./build-rh8
        - export SNAPSHOT_IMAGE_TAG="opendap/${DOCKER_NAME}_ncwms:snapshot"
        - export BUILD_VERSION_TAG="opendap/${DOCKER_NAME}_ncwms:${HYRAX_VERSION}"
        - export TOMCAT_VERSION=$(get_latest_tomcat_version_number "${TOMCAT_MAJOR_VERSION}")
        - show_version
        - get_tomcat_distro "${DOCKER_NAME}" "${TOMCAT_VERSION}"
        - s3_get_besd_distro
          "${S3_BUILD_BUCKET}"
          "${DOCKER_NAME}"
          "el8"
          "${LIBDAP_VERSION}"
          "${BES_VERSION}" "${ADD_DEBUG_RPMS}" 2>&1
        - s3_get_olfs_distro
          "${S3_BUILD_BUCKET}"
          "${DOCKER_NAME}"
          "${OLFS_VERSION}" 2>&1
        - docker build
          --build-arg TOMCAT_VERSION
          --build-arg RELEASE_DATE
          --build-arg HYRAX_VERSION
          --build-arg LIBDAP_VERSION
          --build-arg BES_VERSION
          --build-arg OLFS_VERSION
          --build-arg USE_NCWMS=true
          --tag "${SNAPSHOT_IMAGE_TAG}"
          --tag "${BUILD_VERSION_TAG}"
          "${DOCKER_NAME}"
        - docker image ls -a

    - stage: BUILD
      name: "Build opendap/hyrax:ngap-snapshot (RH8)"
      script:
        - cd hyrax-builds
        - export DOCKER_NAME="ngap"
        - source ./build-rh8
        - export SNAPSHOT_IMAGE_TAG="opendap/hyrax:${DOCKER_NAME}-snapshot"
        - export BUILD_VERSION_TAG=opendap/hyrax:${DOCKER_NAME}-${HYRAX_VERSION}
        - export TOMCAT_VERSION=$(get_latest_tomcat_version_number "${TOMCAT_MAJOR_VERSION}")
        - show_version
        - get_tomcat_distro "${DOCKER_NAME}" "${TOMCAT_VERSION}"
        - s3_get_besd_distro
          "${S3_BUILD_BUCKET}"
          "${DOCKER_NAME}"
          "el8"
          "${LIBDAP_VERSION}"
          "${BES_VERSION}" "${ADD_DEBUG_RPMS}" 2>&1
        - get_ngap_olfs_distro
          "${S3_BUILD_BUCKET}"
          "${DOCKER_NAME}"
          "${OLFS_VERSION}" 2>&1
        - docker build
          --build-arg TOMCAT_VERSION
          --build-arg RELEASE_DATE
          --build-arg HYRAX_VERSION
          --build-arg LIBDAP_VERSION
          --build-arg BES_VERSION
          --build-arg OLFS_VERSION
          --tag "${SNAPSHOT_IMAGE_TAG}"
          --tag "${BUILD_VERSION_TAG}"
          "${DOCKER_NAME}"
        - docker image ls -a

    - stage: BUILD
      name: "Build opendap/olfs:snapshot"
      script:
        - cd hyrax-builds
        - export DOCKER_NAME="olfs"
        - source ./build-rh8
        - export SNAPSHOT_IMAGE_TAG="opendap/${DOCKER_NAME}:snapshot"
        - export BUILD_VERSION_TAG="opendap/${DOCKER_NAME}:${OLFS_VERSION}"
        - export TOMCAT_VERSION=$(get_latest_tomcat_version_number "${TOMCAT_MAJOR_VERSION}")
        - show_version
        - get_tomcat_distro "${DOCKER_NAME}" "${TOMCAT_VERSION}"
        - s3_get_olfs_distro
          "${S3_BUILD_BUCKET}"
          "olfs"
          "${OLFS_VERSION}" 2>&1
        - docker build
          --build-arg TOMCAT_VERSION
          --build-arg RELEASE_DATE
          --build-arg HYRAX_VERSION
          --build-arg OLFS_VERSION
          --tag "${SNAPSHOT_IMAGE_TAG}"
          --tag "${BUILD_VERSION_TAG}" olfs
        - docker image ls -a

    - stage: TEST_DEPLOYED_IMAGE
      name: "Test Deployed Image (RH8)"
      script:
        - export TEST_IMAGE=opendap/hyrax:${HYRAX_VERSION}
        - echo "Running Hyrax Regression Test Script on ${TEST_IMAGE}"
        - ./regression_test_script -i "${TEST_IMAGE}"
        - export DEPLOY_ME="true"

before_deploy:
  - export DOCKER_LOGIN=`aws ecr get-login --region us-east-1 | sed "s/-e none //g"`;
  - $DOCKER_LOGIN;
  - echo "DEPLOY_ME is ${DEPLOY_ME}"

deploy:
  - provider: script
    script: bash ${TRAVIS_BUILD_DIR}/deploy_to_docker_hub.sh
    on:
      branch: master
      condition: ${DEPLOY_ME} = "true"
