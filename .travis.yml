# paste config here

# Initial Travic-CI control file. 6.11.15 jhrg
# Added sonar scan 3.12.19 jhrg 

dist: xenial

language: python

services:
  - docker

branches:
  only:
    - master

notifications:
  email:
    - ndp@opendap.org
    - jgallagher@opendap.org

env:
  global:
    # AWS_ACCESS_KEY_ID ci-user
    # AWS_SECRET_ACCESS_KEY
    - secure: "q+aZ25BJ7fZSE4+CeJ/EeTWR9KHY018uMB9riHBlxavHZbwSLM0MmwCzPRZb6Q5ke5g5kAjaa3I/3SZ/BKcTdgxmVMzdQT09k89pDhP/kcWNPNcxUwRsJNB0iR8UDgdRMVDv7/jzEAEW0ujRgsWaFUXYRrxuzLLx5l4ZISgEz5vFbL5TgxqxgpzPCYoM6tS5UGv8Y2spyfMYlj+SdMcLwYXa5mmX7d2O74CKa9L3Lo1sI7jI5ePcOIFc/f8x07942EimLoJd1NgLokdzOXkEMJVwXKwAdrCOdRcAoovYub6xY/WD5WTc69KUosTpikhgyhuerx7pC2sQkxxV+UAW5B9uWzwlL52mEuOAATFCpKy2BCW4U6i/zds3QQVPqy12GZidovixb8YU3BiNOP0BgtFxYETUBn9DQKsge289vExNuE8oVQs+UXXIiFtueQBu4jFG78zMtRwEADEYCR07zJ0eRWUZCUaHbqaQ+6aKl39ImpHG9W7g3divAlRNHXpJJVvkyLnuZf/eod6vmVwqT8hrHHpehy7ihuLpJPHmir2/iZ9C9u3vCGz56lUVjFrcDkuVr22ai9e2167Js3G72nChaDazfmkWe30iuVJW8BIXz9QgJaMEwxW6O1dlTJFEmgVdj67q5qR8bqQAMEzlsVMyjivO3NJj2ACejljb1Ec="
    -secure: "dinzWvS831s3VudX95sPCVIn+RB9j4esNrzmrZ5TCzCE0pAljU1ONsDO0SK1YFbO9dfRGzxrw9oG6/hAvATa47Wgq/I+te6G2sP6nD1NzrImB4LxPk73WfGT568LXC3IVrHqET+H4YmdIweBNCdY8VtxNuITLwrktI7OIl/YDFyklfudQlGBJAMbDxqWnWiGoSTA1s9W2mJMRe+MIGBaFEfEk0cFxnKJvwM2YrEuGEdnrpqXDyV28PUtTJ13sceZP9CgIqfAUgO5XrIXBx+e6rQuVbWg7Ob84Big0qpe8ZPmoTOwlZ0EjjqA6l74W7vbgepWK3z2rFKhYs6Q0QnvbGrK5al/Tpfz7dGeIbl1SzNlI5lAsh6GK1x9qWj9b+zQF/BxOGev1gLwg30caetgt1tu8YteDpBt7jTGg44jAybx6H9zCJT5AfqEnbdvrodEwOWajOclzhW9ODAUXlDqGbAyd918PO4Vam3YrH+aKNODsqvh88VcNeGVpem5j95404AWqH4cr45RyCe64ZPUxSy77cJ7bsSaJytQyDNZ0LGvTRCKHOqS3VTjybarDDy3brSVFqpQ+10cRakYjtcEqWtoX7lUPis0oGegCo4PTUMq6UbU2O9UPM16Lxy316DOHf6b7qu7S3X7Q0Ik0IMY6tDPBE3SNoKP35ZKZzF2KlE="
    # DOCKER_HUB_UID for our DockerHub account
    - secure: "SpCKRpuU9nIHayBZCQVoUIEK/2niy1Lw0fub/O/mAvzq33/VQa1K4WZcAJjl95KS/mrFjj3e5Gp35jXRNeViB8D3DKE9oZ3R5WDk1V66qDpmxYCSW/6iR2Zm6rjBB4wV6wWPZ1WYBg3Hg6oVZD1X8c5ABqJk7PE59L1IRF8Ocf3p8K0EUYDGINakXZ/RJHe6HtA4++oMhq54dPUTAa6xUrkCw3KNC1UXkoofzS3r/KBAZ+MPtzZkR8/dK8qPQ8hiOuH4Blj4T+d4oHPzcbmz5Nze10wZAhAm6+KwLLBSCs7Morverb1acdKPyye/t1dhzhT3/wiaP75vxDF/STdBYH6GX9HuV9JWXC8bJZxrkZcxyuVsreq/ClpLOhOk0Yfd6pTEa/QZZ+U6hyxcNbu6rROAAZpgsjPAiH3vVC9OdFo11p7bZMpBGyqUeiS82XlZ/3Svj//tiUFji2xwua1SHiM3wmgrLjII2iw8eSYuCEjqtoV6jPT0LfKzLSzuCt1S77SzaujkwBiQ1mSIJuE9SNvpXyJEQ4BInVFn+jOxCxQf6sT7ZnW7mxfK1MmgSKpzoBp8WlIAQAIewTJeaU59ws1nYbha84b80vEXp839Eesfpsf5C44dlnFSCa7sZFJ2tRjPaHv7Swt0dyJ2AmL0EHCfecX3e5sSKQAtxLN9+1E="
    # DOCKER_HUB_PSWD for our DockerHub account
    - secure: "TwtIaxZhEc+THFGe7qcOTmgeXG37tG9Hqmx0/JQS4UBYmbM+n/RbxV0IK5WjTBsvV/UBPVPdYLb0EOgsZDWjrFR7kyemd1dLc4fgb7EnHEyl17GUK3CR+ZtnRNAn+u10CJ3lq1d+ttda0GrEOpGT9e2nqPo19BxQ4vlhuFq8TAb4lKfBz3y89sY0Py+3htDtqNrIcZ1Ca0cyKmkU90/42Hx5kmBJPcFAIIrxy46cF4iNyQ8cS5TAmY/vQ+ZcoiO5yCA6ACqKWqFH2i7qUZhVsBWI6VWgQTbuRKOJ4RdOv2QtHb3QGO+PdxxitpQvw2aYam4nI7WapqNk84hu+oXoavDSR0kN21vlpfvcyfIi9JuEGGmVb7irbCCVo27kLHrRrntByKJ7GpR5Wf9s8frWd53iri9k0DSwxvKGZBIaFPodnYsJKF1Ck16IrJrr6AgPZvTKN4vBesFiRvI6sIJrZL6gD62cW2s196zKaSzcT0DccUKCaG6/javNazMo+sk74tOgqaeX0r/whXv8Rc/oobdUFI0AkGGOTzp4+QHVKX1swPEVEjP00ewOyurQinG1yhkqOgQU7s6f5dXabepmnFtH5j5W8AjDL6kISk1w/UIfMwGkUDXyxSGZWLaLag2oDxb+0Xe4CC+9m6SxtnRSzUjXDzOL4QBB8ri0VBSMA2E="
    - RELEASE_DATE=`date +%s`
    - VERSION_FILE=snapshot.time
    - LIBDAP_VERSION=$(grep "libdap4-" ${VERSION_FILE} | awk '{print $1;}' - | sed "s/libdap4-//g")
    - BES_VERSION=$(grep "bes-" ${VERSION_FILE} | awk '{print $1;}' - | sed "s/bes-//g")
    - OLFS_VERSION=$(grep "olfs-" ${VERSION_FILE} | awk '{print $1;}' - | sed "s/olfs-//g")
    - HYRAX_VERSION=$(grep "hyrax-" ${VERSION_FILE} | awk '{print $1;}' - | sed "s/hyrax-//g")

before_install:
  - pip3 install awscli

install:
  - echo "print env:"
  - printenv
  - echo $DOCKER_HUB_PSWD | docker login -u $DOCKER_HUB_UID --password-stdin

stages:
  - name: build
    if:  branch = master
  - name: test
    if: branch = master
  - name: disabled
    if: branch = disabled

jobs:
  include:
    - stage: build
      name: "opendap/besd:snapshot"
      script:
        - export SNAPSHOT_IMAGE_TAG=opendap/besd:snapshot
        - export BUILD_VERSION_TAG=opendap/besd:${BES_VERSION}
        - cd hyrax-builds
        - docker build --build-arg RELEASE_DATE
                        --build-arg AWS_ACCESS_KEY_ID
                        --build-arg AWS_SECRET_ACCESS_KEY
                        --build-arg LIBDAP_VERSION
                        --build-arg BES_VERSION
                        -t "${SNAPSHOT_IMAGE_TAG}" besd
        - docker tag ${SNAPSHOT_IMAGE_TAG} ${BUILD_VERSION_TAG}
        - docker image ls -a

    - stage: disabled
      name: "opendap/olfs:snapshot"
      script:
        - export SNAPSHOT_IMAGE_TAG=opendap/olfs:snapshot
        - export BUILD_VERSION_TAG=opendap/olfs:${OLFS_VERSION}
        - cd hyrax-builds
        - docker build --build-arg RELEASE_DATE
                        --build-arg AWS_ACCESS_KEY_ID
                        --build-arg AWS_SECRET_ACCESS_KEY
                        --build-arg OLFS_VERSION
                        -t "${SNAPSHOT_IMAGE_TAG}" olfs
        - docker tag ${SNAPSHOT_IMAGE_TAG} ${BUILD_VERSION_TAG}
        - docker image ls -a

    - stage: build
      name: "opendap/hyrax:snapshot"
      script:
        - export SNAPSHOT_IMAGE_TAG=opendap/hyrax:snapshot
        - export BUILD_VERSION_TAG=opendap/hyrax:${HYRAX_VERSION}
        - cd hyrax-builds
        - docker build --build-arg RELEASE_DATE
                        --build-arg AWS_ACCESS_KEY_ID
                        --build-arg AWS_SECRET_ACCESS_KEY
                        --build-arg LIBDAP_VERSION
                        --build-arg BES_VERSION
                        --build-arg OLFS_VERSION
                        --tag "${SNAPSHOT_IMAGE_TAG}" hyrax
        - docker tag ${SNAPSHOT_IMAGE_TAG} ${BUILD_VERSION_TAG}
        - docker image ls -a

    - stage: build
      name: "opendap/hyrax_ncwms:snapshot"
      script:
        - export SNAPSHOT_IMAGE_TAG=opendap/hyrax_ncwms:snapshot
        - export BUILD_VERSION_TAG=opendap/hyrax_ncwms:${HYRAX_VERSION}
        - cd hyrax-builds
        - docker build --build-arg RELEASE_DATE
                        --build-arg AWS_ACCESS_KEY_ID
                        --build-arg AWS_SECRET_ACCESS_KEY
                        --build-arg LIBDAP_VERSION
                        --build-arg BES_VERSION
                        --build-arg OLFS_VERSION
                        --build-arg USE_NCWMS=true
                        --tag "${SNAPSHOT_IMAGE_TAG}" hyrax
        - docker tag ${SNAPSHOT_IMAGE_TAG} ${BUILD_VERSION_TAG}
        - docker image ls -a

    - stage: build
      name: "opendap/hyrax:ngap-snapshot"
      script:
        - export SNAPSHOT_IMAGE_TAG=opendap/hyrax:ngap-snapshot
        - export BUILD_VERSION_TAG=opendap/hyrax:ngap-${HYRAX_VERSION}
        - cd hyrax-builds
        - docker build --build-arg RELEASE_DATE
          --build-arg AWS_ACCESS_KEY_ID
          --build-arg AWS_SECRET_ACCESS_KEY
          --build-arg LIBDAP_VERSION
          --build-arg BES_VERSION
          --build-arg OLFS_VERSION
          --tag "${SNAPSHOT_IMAGE_TAG}" ngap
        - docker tag ${SNAPSHOT_IMAGE_TAG} ${BUILD_VERSION_TAG}
        - docker image ls -a

    - stage: test
      name: "Hyrax Regression Tests"
      script:
        - echo "Running Test Script"
        - ./regression_test_script

before_deploy:
  - export DOCKER_LOGIN=`aws ecr get-login --region us-east-1 | sed "s/-e none //g"`;
  - $DOCKER_LOGIN;

deploy:
  - provider: script
    script: bash ${TRAVIS_BUILD_DIR}/deploy_to_docker_hub.sh
    on:
      branch: master
      condition: ${TRAVIS_PULL_REQUEST} = "false"


