# paste config here

# Initial Travic-CI control file. 6.11.15 jhrg
# Added sonar scan 3.12.19 jhrg 

dist: trusty

language: python

python:
  - 3.4

services:
  - docker

branches:
  only:
    - master
    - travis

notifications:
  email:
    - ndp@opendap.org
    - jgallagher@opendap.org

env:
  global:
    #
    # AWS_ACCESS_KEY_ID for the user 'travis-hyrax-docker'
    - secure: "HTUrf/EkJ9riPguRUWJMTutRd+iAVi0NJLKw4GJfCxsV2ljnuXwCiQnMqX0EAmBaGU2zxaFsUfXCPva/9UCrCvTAfmzgrDyXE9fPO8Fr8htyAnr1SBacUUbtB64/NtoXS4zstu83Wun0p/VR+KbupglS/iO5U0juPlZnrEjXBRMciwrMAWSw6gxooxaOV2O9b8yKD0U3+t2hkxt6glAidnpFBfakKkEjjM/ampcEnC7CwFCa1szfd2z4qN5d7w7cDx2KE8l6JwpwGgckfD4hFmFJVNFXipTX5SDPi7oh86Gx9nTT9YbpNoXkkYMh82PsomJB0c05/CLIzgt7NfwU8yTe9e/saekg+UA4svu4ctH00mr0zWvJYADxX8NWzqxwCY5DwWnsoCZEmuKMKw1pQDsv57g0iNiQkkaMHKv7Rb49lORfH9x5xdp+9k33MkS1OZ7OYwCJ0Jr25VO5/4fJ26dUR5cyV07KBKUivMYFhefYCqIhffQP2EgLz3tY7W4Ay8lt8VOnsql4bOsox1zgkVo3wkgwOaGOVaPjqpQ4kCV/fiTJ8/pmc1CBZr4iX5oDTIYsW9UeXlYNx/MFezxh3SdhQz1WEa330HHY0JwDGmkuRdiRq/y5WerVW5X5C7XqQ0ZVK0NyrzRp1o97yntkfjmppxQfsijtid0zKSzEEAI="
    #
    # AWS_SECRET_ACCESS_KEY
    - secure: "IEHGoNK8yvvTzSaZbrUZA3L89wZ+iYT+m0xewqRH2qAVHDLOVMhD8YZSIgvot1QYJme+XDKw2uJv9Z7mTQmtsUk7Ok6HzD3Yk4EiCaTa3HJ0ekmHTSa5McGs44E1M7roKLpYiDlTOFbCrBUPsYFIrLbdpMoLJr5lFBKmr3yhCiNWdyTZqfSlapTPPayqr3QMZ1JlayJwOnYzFeJY9JwJFipLMXqfLgpfYzXdw8zmdhFBtXXrSMwyOOncdRp8yRzolPs4rDWIiVJ9X0wJA5XvCkoz8AQsZ2+pH1uiQGuiiaZ5TS4rlw5Ho9tlqq6bLYWVGIo32+5/Rf8SiHw054smvS/cFesT82CiPutupYkgd8K+bxvsNZ/aCaqq7JJmqQJF5kMzfxEuJNA5UKHlgX4bq1CnBIuDFs0wllL29Kv0ifThdzpItZnxeO6lmGuNSMCSIWQA7AT7xjfvaS7IPTBI+nDk1y2+aNiG/yZBa7SCCfmN3ecIE5HMxbWFfqEZeO7cb6QL80yAM9LSYUBs217W/H6iF5Hyvm7jhy5z1f7ILlyVfTGUHzCT0XhbFD0TGONFcQAW8pp7NGFmyk6xmGS6LbqBliYV6JN63n/DstJgXMAynUYl0U5J852XNoUrlQwlPn4iHs7sDvylgmNZY04NbCGqIsVxGkdSw3O1azzHPqE="
    #
    # DOCKER_USERNAME for our DockerHub account
    - secure: "SeClVCFBXKAhynv5wD/6OdqLwtK0d5kc0XawlwinPBT2Hg5Y1ZlQKIAZsOwOqXTUcAQtVjnHYLru09ataLuDRIdtcZeDv7TKkE6ZS9nFb4bMM8j6XwxFo2lM4pICks7tY5clClRTvTzdxbkPbmfxHnInHnZmB8md/gOIi3KJseRVS9aignr+1qxyvuyAPha9Rxeiz+iOo4kWKuK3IGiSKp5qIJczoz631f3lsZQJ14Eyiz8vcCL0mJxQ3RbBfl9pNsYmM9XZSCSp9yRNCCDkLGUZNIRNjamy5UFxkhb2meGWOCTAgD5kvRl5LjIv7i2//r46tBN9OMZ8Agz4FvVM9OzWMGCGoimQ6omTp+/+bn+gBhssVoZi4Z9EgYdl2oWPCk8XihmCpFcY/wWrxuYWjQ9u5eXOEVrLp3qNMhmq1X3Z/RWev40b1hWy5ofqjdKfQHsC6j/HHGzxey+VRR9PZHke9c38uOLqb/4Wkaa5Nm3W4cFaeAzyB26GjTe2FiaKZKmYyHz75G52TEoFAOoe2UShp/JDG/HAefr2XJuA1vxHfn/xURMxvoHJ3XEfOORE1S+mP3iREl3Gl1hlp9Dpa6UTWkO6WWdMkBhhX104zyHtTtJu1EebAgoUzoyTe14gi8OgD6FECGyUK4f4c9PlfKabu0y72Nw29t5ef4OKffc="
    #
    # DOCKER_PASSWORD for our DockerHub account
    - secure: "DvQvxpRtfC/EUZ8LjxjL7XvfRRHmt1eimmSbDCAObedkglvjyI0Cvv0njzHDnPLLLZQ2HgtDAzVwZ4OhcJxw0L2olv8/3n01dTwgisziC/bquQHUJHB735naHJUUHB+Id0+02TB9VSJUSeWmlV6wml1hPgk290sHUNQ3+zLxYz51/F6pw4dC4hNuEji0J8A+wDsx2GUGPZaRqiVqAFjKGcnbRTZF/uZ/NRk5AVsxVW+4CF6Jy/e+9WNkj7XlPtPMSS8HCz+20hbhKRJTqlul2pMQOhqWBClEE39kKEd3Mv5UxeCr6hunAEVyS4ig91XgZykSh4/BZ5Tj9aG7LsA0uE4mAhYmN0NrfG3dtfSFSVPF9LwENk2hrh1HSLjuYF1VZpW+sJqnYZmZ35yBY+WtbUd2IwHZ/eVjKk4JX4O2+W3B62GuldSxwYGpoE0wJjmucGSt2XGo7r1nC1Em1rcA9wbzUPjb4Q6/MVPsrX0o3NKUcCn2FoOCat92Ge7WwnIM7LaHm0/6j2uoXLzPd8VAyxLLq0vhyY/7cxQp+8/+j7fIU4K0yJYNq97OOXlcSdkWhNW3kmnE26mPmWUQht5icz0YFAHielPLn3GarZA2X5bYeZ4ffElaN+QFv/4Jy4qRHS0Caml3el2Xi3jqQcj6DFRVKHNdNyvm0JL7b58xfv0="
    #
    #



install:
  - pip3 install awscli
  # pip3 install --upgrade -r .travis.requirements

stages:
  - name: build
    if:  branch = master
  - name: test
    if: branch = master
  - name: deploy
    if: branch = master

jobs:
  include:
    - stage: build
      name: "opendap/besd:snapshot"
      script:
        - export IMAGE_TAG=opendap/besd:snapshot
        - cd hyrax-snapshot
        - docker build --build-arg RELEASE_DATE=`date +%s` --build-arg AWS_ACCESS_KEY_ID --build-arg AWS_SECRET_ACCESS_KEY -t "$IMAGE_TAG" besd
        - docker image ls -a


    - stage: build
      name: "opendap/olfs:snapshot"
      script:
        - export IMAGE_TAG=opendap/olfs:snapshot
        - cd hyrax-snapshot
        - export VERSION_TAG=`grep "olfs-" snapshot.time | awk '{print $1;}' -`
        - echo "VERSION_TAG ${VERSION_TAG}"
        - docker build --build-arg RELEASE_DATE=`date +%s` --build-arg AWS_ACCESS_KEY_ID --build-arg AWS_SECRET_ACCESS_KEY -t "${IMAGE_TAG}" olfs
        - docker tag ${IMAGE_TAG} ${VERSION_TAG}
        - docker image ls -a

    - stage: build
      name: "opendap/hyrax:snapshot"
      script:
        - export IMAGE_TAG=opendap/hyrax:snapshot
        - cd hyrax-snapshot
        - docker build --build-arg RELEASE_DATE=`date +%s` --build-arg AWS_ACCESS_KEY_ID --build-arg AWS_SECRET_ACCESS_KEY -t "$IMAGE_TAG" hyrax
        - docker image ls -a

    - stage: build
      name: "opendap/hyrax_ncwms:snapshot"
      script:
        - export IMAGE_TAG=opendap/hyrax_ncwms:snapshot
        - cd hyrax-snapshot
        - docker build --build-arg RELEASE_DATE=`date +%s` --build-arg AWS_ACCESS_KEY_ID --build-arg AWS_SECRET_ACCESS_KEY  --build-arg USE_NCWMS=true -t "$IMAGE_TAG" hyrax
        - docker image ls -a

    - stage: build
      name: "opendap/hyrax:ngap-snapshot"
      script:
        - export IMAGE_TAG=opendap/hyrax:ngap-snapshot
        - cd hyrax-snapshot
        - docker build --build-arg RELEASE_DATE=`date +%s` --build-arg AWS_ACCESS_KEY_ID --build-arg AWS_SECRET_ACCESS_KEY -t "$IMAGE_TAG" ngap
        - docker image ls -a

    - stage: test
      name: "Hyrax Regression Tests"
      script:
        - echo "Running Test Script"
        - ./regression_test_script

before_deploy:
  - export DOCKER_LOGIN=`aws ecr get-login --region us-east-1 | sed "s/-e none //g"`;
  - $DOCKER_LOGIN;

deploy:
  - provider: script
    script:
      - echo "Deploying $IMAGE_TAG to Docker Hub";
        echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin;
        docker push $IMAGE_TAG;
        echo "Docker Hub deployment complete.";
        echo "Deploying $IMAGE_TAG to AWS ECR";
        aws configure list;
        docker tag $IMAGE_TAG 747931985039.dkr.ecr.us-east-1.amazonaws.com/$IMAGE_TAG;
        docker push 747931985039.dkr.ecr.us-east-1.amazonaws.com/$IMAGE_TAG;
        echo "AWS ECR deployment complete.";
    on:
      branch: master
      condition: ${TRAVIS_PULL_REQUEST} = "false"


